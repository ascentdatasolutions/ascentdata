<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Ascent Data Solutions</title>
    <link>https://ascentdata.netlify.app/</link>
    <description>Recent content on Ascent Data Solutions</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>All rights reserved - 2022</copyright>
    <lastBuildDate>Thu, 15 Sep 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://ascentdata.netlify.app/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>About</title>
      <link>https://ascentdata.netlify.app/about/test/</link>
      <pubDate>Thu, 15 Sep 2022 00:00:00 +0000</pubDate>
      
      <guid>https://ascentdata.netlify.app/about/test/</guid>
      <description>Ascent Data Solutions enables your data to act and produce outcomes. Data is constantly changing. We make it possible for your data and operations teams to set up data expectations and automate processes based on its status.</description>
    </item>
    
    <item>
      <title>About</title>
      <link>https://ascentdata.netlify.app/post/2022/09/15/test/</link>
      <pubDate>Thu, 15 Sep 2022 00:00:00 +0000</pubDate>
      
      <guid>https://ascentdata.netlify.app/post/2022/09/15/test/</guid>
      <description>Ascent Data Solutions enables your data to act and produce outcomes. Data is constantly changing. We make it possible for your data and operations teams to set up data expectations and automate processes based on its status.</description>
    </item>
    
    <item>
      <title>Contact</title>
      <link>https://ascentdata.netlify.app/contact/test/</link>
      <pubDate>Thu, 15 Sep 2022 00:00:00 +0000</pubDate>
      
      <guid>https://ascentdata.netlify.app/contact/test/</guid>
      <description>Contact us</description>
    </item>
    
    <item>
      <title></title>
      <link>https://ascentdata.netlify.app/blog/sample3/</link>
      <pubDate>Wed, 14 Sep 2022 00:00:00 +0000</pubDate>
      
      <guid>https://ascentdata.netlify.app/blog/sample3/</guid>
      <description>CASE STUDIES Mining Industry </description>
    </item>
    
    <item>
      <title></title>
      <link>https://ascentdata.netlify.app/post/2022/09/14/test/</link>
      <pubDate>Wed, 14 Sep 2022 00:00:00 +0000</pubDate>
      
      <guid>https://ascentdata.netlify.app/post/2022/09/14/test/</guid>
      <description>CASE STUDIES Mining Industry </description>
    </item>
    
    <item>
      <title>Snowflake</title>
      <link>https://ascentdata.netlify.app/blog/sample4/</link>
      <pubDate>Tue, 13 Sep 2022 00:00:00 +0000</pubDate>
      
      <guid>https://ascentdata.netlify.app/blog/sample4/</guid>
      <description>Building for source For production release:
gulp build --prod Generating pre-built zip archives for distribution:
gulp build dist --prod Docker Dillinger is very easy to install and deploy in a Docker container.
By default, the Docker will expose port 8080, so change this within the Dockerfile if necessary. When ready, simply use the Dockerfile to build the image.
cd dillinger docker build -t &amp;lt;youruser&amp;gt;/dillinger:${package.json.version} . This will create the dillinger image and pull in the necessary dependencies.</description>
    </item>
    
    <item>
      <title>Snowflake</title>
      <link>https://ascentdata.netlify.app/post/2022/09/13/test/</link>
      <pubDate>Tue, 13 Sep 2022 00:00:00 +0000</pubDate>
      
      <guid>https://ascentdata.netlify.app/post/2022/09/13/test/</guid>
      <description>Building for source For production release:
gulp build --prod Generating pre-built zip archives for distribution:
gulp build dist --prod Docker Dillinger is very easy to install and deploy in a Docker container.
By default, the Docker will expose port 8080, so change this within the Dockerfile if necessary. When ready, simply use the Dockerfile to build the image.
cd dillinger docker build -t &amp;lt;youruser&amp;gt;/dillinger:${package.json.version} . This will create the dillinger image and pull in the necessary dependencies.</description>
    </item>
    
    <item>
      <title>Business Intelligence</title>
      <link>https://ascentdata.netlify.app/blog/sample2/</link>
      <pubDate>Sat, 01 Jan 2022 00:00:00 +0000</pubDate>
      
      <guid>https://ascentdata.netlify.app/blog/sample2/</guid>
      <description>As reference #1 let’s use a traditional BI-oriented data stack which looks approximately like this:
Google Big Query or any other DWH if we take a different organization is in the middle of the stack. There are multiple data sources and ETL or ELT software that collects data from these data sources and puts it into the DWH. Afterward, as soon as data are in the data warehouse, Looker is connected to it for business intelligence and since it is a part of Google Cloud it integrates perfectly with Google Big Query.</description>
    </item>
    
    <item>
      <title>Business Intelligence</title>
      <link>https://ascentdata.netlify.app/post/2022/01/01/test/</link>
      <pubDate>Sat, 01 Jan 2022 00:00:00 +0000</pubDate>
      
      <guid>https://ascentdata.netlify.app/post/2022/01/01/test/</guid>
      <description>As reference #1 let’s use a traditional BI-oriented data stack which looks approximately like this:
Google Big Query or any other DWH if we take a different organization is in the middle of the stack. There are multiple data sources and ETL or ELT software that collects data from these data sources and puts it into the DWH. Afterward, as soon as data are in the data warehouse, Looker is connected to it for business intelligence and since it is a part of Google Cloud it integrates perfectly with Google Big Query.</description>
    </item>
    
    <item>
      <title>Deploying Static Websites with Hugo &amp; GoDaddy</title>
      <link>https://ascentdata.netlify.app/blog/sample1/</link>
      <pubDate>Fri, 01 Jan 2021 00:00:00 +0000</pubDate>
      
      <guid>https://ascentdata.netlify.app/blog/sample1/</guid>
      <description>Hugo + Netlify + GoDaddy _How to create a Hugo Website Hugo is a potent static website creator created in the GO programming language. You may use it to construct uncluttered, up-to-date websites with minimum overhead that load rapidly.
Buying a domain in GoDaddyDownloading your favorite hugo theme in local repository with GithubDeploying the website in NetlifyMagic ✨ You generally don&amp;rsquo;t want to spend a lot of time building a website that will be straightforward and content-driven.</description>
    </item>
    
    <item>
      <title>Deploying Static Websites with Hugo &amp; GoDaddy</title>
      <link>https://ascentdata.netlify.app/post/2021/01/01/test/</link>
      <pubDate>Fri, 01 Jan 2021 00:00:00 +0000</pubDate>
      
      <guid>https://ascentdata.netlify.app/post/2021/01/01/test/</guid>
      <description>Hugo + Netlify + GoDaddy _How to create a Hugo Website Hugo is a potent static website creator created in the GO programming language. You may use it to construct uncluttered, up-to-date websites with minimum overhead that load rapidly.
Buying a domain in GoDaddyDownloading your favorite hugo theme in local repository with GithubDeploying the website in NetlifyMagic ✨ You generally don&amp;rsquo;t want to spend a lot of time building a website that will be straightforward and content-driven.</description>
    </item>
    
  </channel>
</rss>
